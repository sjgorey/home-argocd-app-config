apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: paperless-ngx
  labels:
    app: paperless-ngx
    component: postgres
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: paperless-ngx
      component: postgres
  template:
    metadata:
      labels:
        app: paperless-ngx
        component: postgres
    spec:
      nodeSelector:
        kubernetes.io/arch: amd64
      containers:
      - name: postgres
        image: postgres:15-alpine
        imagePullPolicy: IfNotPresent
        
        ports:
        - name: postgres
          containerPort: 5432
          protocol: TCP
        
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: paperless-secrets
              key: db-name
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: paperless-secrets
              key: db-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: paperless-secrets
              key: db-password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
            - -d
            - $(POSTGRES_DB)
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
        
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
            - -d
            - $(POSTGRES_DB)
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-data-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: paperless-ngx
  labels:
    app: paperless-ngx
    component: redis
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: paperless-ngx
      component: redis
  template:
    metadata:
      labels:
        app: paperless-ngx
        component: redis
    spec:
      nodeSelector:
        kubernetes.io/arch: amd64
      containers:
      - name: redis
        image: redis:7-alpine
        imagePullPolicy: IfNotPresent
        
        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP
        
        command:
        - redis-server
        - --appendonly
        - "yes"
        - --dir
        - /data
        
        volumeMounts:
        - name: redis-data
          mountPath: /data
        
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-data-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tika
  namespace: paperless-ngx
  labels:
    app: paperless-ngx
    component: tika
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-ngx
      component: tika
  template:
    metadata:
      labels:
        app: paperless-ngx
        component: tika
    spec:
      nodeSelector:
        kubernetes.io/arch: amd64
      containers:
      - name: tika
        image: apache/tika:latest-full
        imagePullPolicy: IfNotPresent
        
        ports:
        - name: http
          containerPort: 9998
          protocol: TCP
        
        resources:
          requests:
            cpu: 100m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi
        
        livenessProbe:
          httpGet:
            path: /version
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /version
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gotenberg
  namespace: paperless-ngx
  labels:
    app: paperless-ngx
    component: gotenberg
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paperless-ngx
      component: gotenberg
  template:
    metadata:
      labels:
        app: paperless-ngx
        component: gotenberg
    spec:
      nodeSelector:
        kubernetes.io/arch: amd64
      containers:
      - name: gotenberg
        image: gotenberg/gotenberg:8
        imagePullPolicy: IfNotPresent
        
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        
        command:
        - gotenberg
        - --chromium-disable-javascript=true
        - --chromium-allow-list=file:///tmp/.*
        
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3